local kickList = {
    "", --make sure all the one player targets in here except the last one has a comma at the end
    "" 
}

local toggleEnabled = true
local toggle1Enabled = true

local function teamlockLoop()
    while true do
        if toggleEnabled then
            local args = {
                "requestTeam",
                "police"
            }
         
            workspace:WaitForChild("resources"):WaitForChild("RemoteFunction"):InvokeServer(unpack(args))
        end
        wait()
    end
end

coroutine.wrap(teamlockLoop)()

local function autoHostileLoop()
    while true do
        if toggle1Enabled then
            local args = {
                "becomeHostile"
            }
         
            workspace:WaitForChild("resources"):WaitForChild("RemoteEvent"):FireServer(unpack(args))
        end
        wait()
    end
end

coroutine.wrap(autoHostileLoop)()

local autoTargetKick = true
local playerJoinConn

local riotLib = require(workspace.upsilonLibrary)

local function handleKickActions(target)
    if not target.Character or not target.Character:FindFirstChild("HumanoidRootPart") then return end

    riotLib.InvokeServer("giveRiotShield", target.Character.HumanoidRootPart)

    local function clearLocalShield()
        workspace.resources.RemoteFunction:InvokeServer("giveRiotShield", workspace["robber spawn"])
        for _, item in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
            if item.Name == "RiotShield" then
                local armWeld = game.Players.LocalPlayer.Character["Left Arm"]:FindFirstChildOfClass("Weld")
                if armWeld then armWeld:Destroy() end
                item:Destroy()
            end
        end
    end

    clearLocalShield()
    task.wait()

    while target.Character and target.Character:FindFirstChild("Humanoid") and target.Character.Humanoid.Health > 0 do
        for _ = 1, 2 do
            local packet = {
                "FireOtherClients",
                "drawLaser",
                Vector3.new(0, 0, 0),
                Vector3.new(0, 0, 0),
                {
                    Name = "Head",
                    CFrame = target.Character.Head.CFrame,
                    Material = Enum.Material.ForceField,
                    Parent = target.Character,
                    Size = Vector3.new(0.001, 0.001, 0.001),
                    Transparency = 1
                }
            }
            workspace.resources.RemoteEvent:FireServer(unpack(packet))
        end
        task.wait()
    end

    task.wait(0.5)
    workspace.resources.RemoteEvent:FireServer("reloadMe")

    repeat task.wait() until target.Character and target.Character:FindFirstChild("Humanoid") and target.Character.Humanoid.Health > 0

    riotLib.InvokeServer("giveRiotShield", target.Character.HumanoidRootPart)

    local cheatBarrier = workspace.ignore.invisibleWalls:FindFirstChild("armoryBarrier_Cheaters")
    if cheatBarrier then
        workspace.resources.RemoteFunction:InvokeServer("giveRiotShield", cheatBarrier)
    end

    workspace.resources.RemoteEvent:FireServer("reloadMe")
end


    autoTargetKick = true

    if autoTargetKick then
        for _, plr in ipairs(game.Players:GetPlayers()) do
            if table.find(kickList, plr.Name) then
                task.spawn(function()
                    handleKickActions(plr)
                end)
            end
        end

        playerJoinConn = game.Players.PlayerAdded:Connect(function(joinedPlayer)
            if table.find(kickList, joinedPlayer.Name) then
                joinedPlayer.CharacterAdded:Wait()
                task.wait(0.8)
                handleKickActions(joinedPlayer)
            end
        end)
    else
        if playerJoinConn then
            playerJoinConn:Disconnect()
            playerJoinConn = nil
        end
    end
